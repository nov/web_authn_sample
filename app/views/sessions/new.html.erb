<header>
  <h2>Password-less Login</h2>
</header>

<%= form_tag session_path, id: 'authentication_form' do %>
  <%= hidden_field_tag :credential_id %>
  <%= hidden_field_tag :authenticator_data %>
  <%= hidden_field_tag :client_data_json %>
  <%= hidden_field_tag :signature %>
  <p><%= text_field_tag :webauthn, nil, placeholder: 'Just for autocomplete', autocomplete: 'username webauthn' %></p>
  <p><%= submit_tag 'Login' %></p>
<% end %>

<p class="avatar">
  <span>or</span>
</p>

<header>
  <h2>Password-less Sign-up</h2>
</header>

<%= form_tag account_path, id: 'registration_form' do %>
  <%= hidden_field_tag :attestation_object %>
  <%= hidden_field_tag :client_data_json %>
  <p><%= email_field_tag :email, params[:email], placeholder: 'email', required: true %>
  <p><%= submit_tag 'Sign-up' %></p>
<% end %>

<p class="avatar">
  <span>or</span>
</p>

<header>
  <h2>Passkey Upgrade</h2>
</header>

<%= form_tag session_path, id: 'password_form' do %>
  <p><%= text_field_tag :username, nil, placeholder: 'username', autocomplete: 'username' %></p>
  <p><%= password_field_tag :password, nil, placeholder: 'password', autocomplete: 'password' %></p>
  <p><%= submit_tag 'Login' %></p>
<% end %>

<script src="/web-authn.js"></script>
<script>
  const challenge = "<%= session[:challenge] %>";

  authentication_form.addEventListener('submit', password_less.authenticate);
  registration_form.addEventListener('submit', password_less.register);

  PublicKeyCredential.getClientCapabilities().then((capability) => {
    if (capability.conditionalMediation) {
      password_less.autocomplete(authentication_form);
    } else {
      console.info('conditional mediation unavailable');
    }
  });
</script>